import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from plotly.subplots import make_subplots
from datetime import datetime
covid_df=pd.read_csv("C:/Users/win10/Downloads/COVID/covid_19_india.csv")
covid_df.head()
covid_df.info()
covid_df.describe()

vaccine_df= pd.read_csv("C:/Users/win10/Downloads/COVID/covid_vaccine_statewise.csv")
vaccine_df.head()

covid_df.drop(["Sno","Time","ConfirmedIndianNational","ConfirmedForeignNational"], inplace=True,axis = 1)
covid_df.head()

covid_df['Date'] = pd.to_datetime(covid_df['Date'],format = '%Y-%m-%d')
covid_df.head()

covid_df['Active_Cases'] = covid_df['Confirmed'] - (covid_df['Cured'] + covid_df['Deaths'])
covid_df.tail(40)

statewise = pd.pivot_table(covid_df, values =["Confirmed" , "Deaths", "Cured"], index ="State/UnionTerritory",aggfunc = max)
                          

statewise["Recovery Rate"]= statewise["Cured"]*100/statewise["Confirmed"]
statewise["Mortality Rate"] =statewise["Deaths"]*100/statewise["Confirmed"]

statewise= statewise.sort_values(by = "Confirmed",ascending = False)

statewise.style.background_gradient(cmap = "cubehelix")

#Finding 10 most affected states
top_10 =covid_df.groupby(by = 'State/UnionTerritory').max()[['Active_Cases','Date']].sort_values(by = ['Active_Cases'],ascending=False).reset_index()
fig = plt.figure(figsize=(16,9))
plt.title("top 10 states with most active cases in india",size=25)
ax = sns.barplot(data = top_10.iloc[:10], y = "Active_Cases",x ="State/UnionTerritory", linewidth=2,edgecolor = 'red')
plt.xlabel("States")
plt.ylabel("Toatal Active Cases")
plt.savefig("top10affected.png")
plt.show()


#finding 10 most states with high death cases
top_10_Deaths =covid_df.groupby(by = 'State/UnionTerritory').max()[['Deaths','Date']].sort_values(by = ['Deaths'],ascending=False).reset_index()
fig = plt.figure(figsize=(18,5))
plt.title("top 10 states with most deaths cases in india",size=25)
ax = sns.barplot(data = top_10_Deaths.iloc[:12], y = "Deaths",x ="State/UnionTerritory", linewidth=2,edgecolor = 'green')
plt.xlabel("States")
plt.ylabel("Toatal Detha Cases")
plt.savefig("top10.png")
plt.show()


#plotting linegraph of 5 most high state with Cases
# growth trend
states = ['Maharashtra', 'Karnataka', 'Kerala', 'Uttar Pradesh', 'Tamil Nadu']
filtered_df = covid_df[covid_df['State/UnionTerritory'].isin(states)]
# Plotting
fig = plt.figure(figsize=(12, 6))
ax = sns.lineplot(data=filtered_df, x='Date', y='Active_Cases', hue='State/UnionTerritory')
ax.set_title("Top 5 affected States in India", size=16)
plt.savefig("Top5.png")
plt.show()





#reading the previous file of vaccine
vaccine_df.head() 
#changing the name of Updated on to Vaccine date
vaccine_df.rename(columns ={ 'Updated On':'Vaccine_Date'},inplace=True) 
vaccine_df.info()
vaccine_df.isnull().sum()
vaccination = vaccine_df.drop(columns =['Sputnik V (Doses Administered)','AEFI','18-44 Years (Doses Administered)','45-60 Years (Doses Administered)','60+ Years (Doses Administered)'],axis =1)
vaccination.head()





# #plotting the graph b/w Male & Female
# import plotly.express as px

# Sample DataFrame (Replace this with your actual vaccination DataFrame)
data = {
    "Male(Individuals Vaccinated)": [100, 150, 200],
    "Female(Individuals Vaccinated)": [120, 130, 210]
}
vaccination = pd.DataFrame(data)

# Sum the number of vaccinated individuals by gender
male = vaccination["Male(Individuals Vaccinated)"].sum()
female = vaccination["Female(Individuals Vaccinated)"].sum()

# Create a pie chart
fig = px.pie(names=["Male", "Female"], values=[male, female], title="Male and Female Vaccination")
plt.savefig("MaleFemale.png")
fig.show() 





    
